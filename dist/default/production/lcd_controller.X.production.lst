

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Sat Jun 05 17:01:58 2021

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og1 
     1                           	processor	16F887
     2                           	opt	pw 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2
     5                           	psect	strings,global,class=STRING,delta=2
     6                           	psect	cinit,global,class=CODE,merge=1,delta=2
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     8                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
     9                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    10                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    11                           	psect	maintext,global,class=CODE,split=1,delta=2
    12                           	psect	text1,local,class=CODE,merge=1,delta=2
    13                           	psect	text2,local,class=CODE,merge=1,delta=2
    14                           	psect	text3,local,class=CODE,merge=1,delta=2
    15                           	psect	text4,local,class=CODE,merge=1,delta=2
    16                           	psect	text5,local,class=CODE,merge=1,delta=2
    17                           	dabs	1,0x7E,2
    18  0000                     
    19                           ; Version 2.10
    20                           ; Generated 31/07/2019 GMT
    21                           ; 
    22                           ; Copyright Â© 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
    23                           ; All rights reserved.
    24                           ; 
    25                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    26                           ; 
    27                           ; Redistribution and use in source and binary forms, with or without modification, are
    28                           ; permitted provided that the following conditions are met:
    29                           ; 
    30                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    31                           ;        conditions and the following disclaimer.
    32                           ; 
    33                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    34                           ;        of conditions and the following disclaimer in the documentation and/or other
    35                           ;        materials provided with the distribution.
    36                           ; 
    37                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    38                           ;        software without specific prior written permission.
    39                           ; 
    40                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    41                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    42                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    43                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    44                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    45                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    46                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    47                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    48                           ; 
    49                           ; 
    50                           ; Code-generator required, PIC16F887 Definitions
    51                           ; 
    52                           ; SFR Addresses
    53  0000                     	;# 
    54  0001                     	;# 
    55  0002                     	;# 
    56  0003                     	;# 
    57  0004                     	;# 
    58  0005                     	;# 
    59  0006                     	;# 
    60  0007                     	;# 
    61  0008                     	;# 
    62  0009                     	;# 
    63  000A                     	;# 
    64  000B                     	;# 
    65  000C                     	;# 
    66  000D                     	;# 
    67  000E                     	;# 
    68  000E                     	;# 
    69  000F                     	;# 
    70  0010                     	;# 
    71  0011                     	;# 
    72  0012                     	;# 
    73  0013                     	;# 
    74  0014                     	;# 
    75  0015                     	;# 
    76  0015                     	;# 
    77  0016                     	;# 
    78  0017                     	;# 
    79  0018                     	;# 
    80  0019                     	;# 
    81  001A                     	;# 
    82  001B                     	;# 
    83  001B                     	;# 
    84  001C                     	;# 
    85  001D                     	;# 
    86  001E                     	;# 
    87  001F                     	;# 
    88  0081                     	;# 
    89  0085                     	;# 
    90  0086                     	;# 
    91  0087                     	;# 
    92  0088                     	;# 
    93  0089                     	;# 
    94  008C                     	;# 
    95  008D                     	;# 
    96  008E                     	;# 
    97  008F                     	;# 
    98  0090                     	;# 
    99  0091                     	;# 
   100  0092                     	;# 
   101  0093                     	;# 
   102  0093                     	;# 
   103  0093                     	;# 
   104  0094                     	;# 
   105  0095                     	;# 
   106  0096                     	;# 
   107  0097                     	;# 
   108  0098                     	;# 
   109  0099                     	;# 
   110  009A                     	;# 
   111  009B                     	;# 
   112  009C                     	;# 
   113  009D                     	;# 
   114  009E                     	;# 
   115  009F                     	;# 
   116  0105                     	;# 
   117  0107                     	;# 
   118  0108                     	;# 
   119  0109                     	;# 
   120  010C                     	;# 
   121  010C                     	;# 
   122  010D                     	;# 
   123  010E                     	;# 
   124  010F                     	;# 
   125  0185                     	;# 
   126  0187                     	;# 
   127  0188                     	;# 
   128  0189                     	;# 
   129  018C                     	;# 
   130  018D                     	;# 
   131  0000                     	;# 
   132  0001                     	;# 
   133  0002                     	;# 
   134  0003                     	;# 
   135  0004                     	;# 
   136  0005                     	;# 
   137  0006                     	;# 
   138  0007                     	;# 
   139  0008                     	;# 
   140  0009                     	;# 
   141  000A                     	;# 
   142  000B                     	;# 
   143  000C                     	;# 
   144  000D                     	;# 
   145  000E                     	;# 
   146  000E                     	;# 
   147  000F                     	;# 
   148  0010                     	;# 
   149  0011                     	;# 
   150  0012                     	;# 
   151  0013                     	;# 
   152  0014                     	;# 
   153  0015                     	;# 
   154  0015                     	;# 
   155  0016                     	;# 
   156  0017                     	;# 
   157  0018                     	;# 
   158  0019                     	;# 
   159  001A                     	;# 
   160  001B                     	;# 
   161  001B                     	;# 
   162  001C                     	;# 
   163  001D                     	;# 
   164  001E                     	;# 
   165  001F                     	;# 
   166  0081                     	;# 
   167  0085                     	;# 
   168  0086                     	;# 
   169  0087                     	;# 
   170  0088                     	;# 
   171  0089                     	;# 
   172  008C                     	;# 
   173  008D                     	;# 
   174  008E                     	;# 
   175  008F                     	;# 
   176  0090                     	;# 
   177  0091                     	;# 
   178  0092                     	;# 
   179  0093                     	;# 
   180  0093                     	;# 
   181  0093                     	;# 
   182  0094                     	;# 
   183  0095                     	;# 
   184  0096                     	;# 
   185  0097                     	;# 
   186  0098                     	;# 
   187  0099                     	;# 
   188  009A                     	;# 
   189  009B                     	;# 
   190  009C                     	;# 
   191  009D                     	;# 
   192  009E                     	;# 
   193  009F                     	;# 
   194  0105                     	;# 
   195  0107                     	;# 
   196  0108                     	;# 
   197  0109                     	;# 
   198  010C                     	;# 
   199  010C                     	;# 
   200  010D                     	;# 
   201  010E                     	;# 
   202  010F                     	;# 
   203  0185                     	;# 
   204  0187                     	;# 
   205  0188                     	;# 
   206  0189                     	;# 
   207  018C                     	;# 
   208  018D                     	;# 
   209  0000                     	;# 
   210  0001                     	;# 
   211  0002                     	;# 
   212  0003                     	;# 
   213  0004                     	;# 
   214  0005                     	;# 
   215  0006                     	;# 
   216  0007                     	;# 
   217  0008                     	;# 
   218  0009                     	;# 
   219  000A                     	;# 
   220  000B                     	;# 
   221  000C                     	;# 
   222  000D                     	;# 
   223  000E                     	;# 
   224  000E                     	;# 
   225  000F                     	;# 
   226  0010                     	;# 
   227  0011                     	;# 
   228  0012                     	;# 
   229  0013                     	;# 
   230  0014                     	;# 
   231  0015                     	;# 
   232  0015                     	;# 
   233  0016                     	;# 
   234  0017                     	;# 
   235  0018                     	;# 
   236  0019                     	;# 
   237  001A                     	;# 
   238  001B                     	;# 
   239  001B                     	;# 
   240  001C                     	;# 
   241  001D                     	;# 
   242  001E                     	;# 
   243  001F                     	;# 
   244  0081                     	;# 
   245  0085                     	;# 
   246  0086                     	;# 
   247  0087                     	;# 
   248  0088                     	;# 
   249  0089                     	;# 
   250  008C                     	;# 
   251  008D                     	;# 
   252  008E                     	;# 
   253  008F                     	;# 
   254  0090                     	;# 
   255  0091                     	;# 
   256  0092                     	;# 
   257  0093                     	;# 
   258  0093                     	;# 
   259  0093                     	;# 
   260  0094                     	;# 
   261  0095                     	;# 
   262  0096                     	;# 
   263  0097                     	;# 
   264  0098                     	;# 
   265  0099                     	;# 
   266  009A                     	;# 
   267  009B                     	;# 
   268  009C                     	;# 
   269  009D                     	;# 
   270  009E                     	;# 
   271  009F                     	;# 
   272  0105                     	;# 
   273  0107                     	;# 
   274  0108                     	;# 
   275  0109                     	;# 
   276  010C                     	;# 
   277  010C                     	;# 
   278  010D                     	;# 
   279  010E                     	;# 
   280  010F                     	;# 
   281  0185                     	;# 
   282  0187                     	;# 
   283  0188                     	;# 
   284  0189                     	;# 
   285  018C                     	;# 
   286  018D                     	;# 
   287                           
   288                           	psect	idataBANK0
   289  04D4                     __pidataBANK0:	
   290                           
   291                           ;initializer for main@F1468
   292  04D4  3407               	retlw	7
   293  04D5  3400               	retlw	0
   294  04D6  3408               	retlw	8
   295  04D7  341A               	retlw	26
   296  04D8  342C               	retlw	44
   297  0006                     _PORTB	set	6
   298  0005                     _PORTA	set	5
   299  0007                     _PORTC	set	7
   300  0087                     _TRISC	set	135
   301  0086                     _TRISB	set	134
   302  0085                     _TRISA	set	133
   303                           
   304                           	psect	strings
   305  0003                     __pstrings:	
   306  0003                     stringtab:	
   307  0003                     __stringtab:	
   308  0003                     stringcode:	
   309                           ;	String table - string pointers are 1 byte each
   310                           
   311  0003                     stringdir:	
   312  0003  3000               	movlw	high stringdir
   313  0004  008A               	movwf	10
   314  0005  0804               	movf	4,w
   315  0006  0A84               	incf	4,f
   316  0007  0782               	addwf	2,f
   317  0008                     __stringbase:	
   318  0008  3400               	retlw	0
   319  0009                     __end_of__stringtab:	
   320  0009                     STR_1:	
   321  0009  3448               	retlw	72	;'H'
   322  000A  3445               	retlw	69	;'E'
   323  000B  344C               	retlw	76	;'L'
   324  000C  344C               	retlw	76	;'L'
   325  000D  344F               	retlw	79	;'O'
   326  000E  3400               	retlw	0
   327                           
   328                           ; #config settings
   329  0000                     
   330                           	psect	cinit
   331  07D9                     start_initialization:	
   332  07D9                     __initialization:	
   333                           
   334                           ; Initialize objects allocated to BANK0
   335  07D9  120A  118A  24D4  120A  118A  	fcall	__pidataBANK0	;fetch initializer
   336  07DE  00AF               	movwf	__pdataBANK0& (0+127)
   337  07DF  120A  118A  24D5  120A  118A  	fcall	__pidataBANK0+1	;fetch initializer
   338  07E4  00B0               	movwf	(__pdataBANK0+1)& (0+127)
   339  07E5  120A  118A  24D6  120A  118A  	fcall	__pidataBANK0+2	;fetch initializer
   340  07EA  00B1               	movwf	(__pdataBANK0+2)& (0+127)
   341  07EB  120A  118A  24D7  120A  118A  	fcall	__pidataBANK0+3	;fetch initializer
   342  07F0  00B2               	movwf	(__pdataBANK0+3)& (0+127)
   343  07F1  120A  118A  24D8  120A  118A  	fcall	__pidataBANK0+4	;fetch initializer
   344  07F6  00B3               	movwf	(__pdataBANK0+4)& (0+127)
   345                           
   346                           ; Clear objects allocated to BANK0
   347  07F7  01AA               	clrf	__pbssBANK0& (0+127)
   348  07F8  01AB               	clrf	(__pbssBANK0+1)& (0+127)
   349  07F9  01AC               	clrf	(__pbssBANK0+2)& (0+127)
   350  07FA  01AD               	clrf	(__pbssBANK0+3)& (0+127)
   351  07FB  01AE               	clrf	(__pbssBANK0+4)& (0+127)
   352  07FC                     end_of_initialization:	
   353                           ;End of C runtime variable initialization code
   354                           
   355  07FC                     __end_of__initialization:	
   356  07FC  0183               	clrf	3
   357  07FD  120A  118A  2D59   	ljmp	_main	;jump to C main() function
   358                           
   359                           	psect	bssBANK0
   360  002A                     __pbssBANK0:	
   361  002A                     _lcd:	
   362  002A                     	ds	5
   363                           
   364                           	psect	dataBANK0
   365  002F                     __pdataBANK0:	
   366  002F                     main@F1468:	
   367  002F                     	ds	5
   368                           
   369                           	psect	cstackCOMMON
   370  0070                     __pcstackCOMMON:	
   371  0070                     ?_LCD_Out:	
   372  0070                     ??_LCD_Out:	
   373                           ; 1 bytes @ 0x0
   374                           
   375  0070                     ?_LCD_Write:	
   376                           ; 1 bytes @ 0x0
   377                           
   378  0070                     ?_LCD_putc:	
   379                           ; 1 bytes @ 0x0
   380                           
   381  0070                     ?_LCD_putrs:	
   382                           ; 1 bytes @ 0x0
   383                           
   384  0070                     ?_main:	
   385                           ; 1 bytes @ 0x0
   386                           
   387                           
   388                           ; 2 bytes @ 0x0
   389  0070                     	ds	3
   390  0073                     LCD_Out@c:	
   391                           
   392                           ; 1 bytes @ 0x3
   393  0073                     	ds	1
   394  0074                     ??_LCD_Write:	
   395  0074                     ??_LCD_putc:	
   396                           ; 1 bytes @ 0x4
   397                           
   398                           
   399                           ; 1 bytes @ 0x4
   400  0074                     	ds	3
   401  0077                     LCD_Write@c:	
   402  0077                     LCD_putc@c:	
   403                           ; 1 bytes @ 0x7
   404                           
   405                           
   406                           ; 1 bytes @ 0x7
   407  0077                     	ds	1
   408  0078                     ?_LCD_Init:	
   409  0078                     ??_LCD_putrs:	
   410                           ; 1 bytes @ 0x8
   411                           
   412  0078                     LCD_putrs@i:	
   413                           ; 1 bytes @ 0x8
   414                           
   415  0078                     LCD_Init@display:	
   416                           ; 2 bytes @ 0x8
   417                           
   418                           
   419                           ; 5 bytes @ 0x8
   420  0078                     	ds	2
   421  007A                     LCD_putrs@a:	
   422                           
   423                           ; 1 bytes @ 0xA
   424  007A                     	ds	3
   425  007D                     LCD_Init@cmd:	
   426                           
   427                           ; 1 bytes @ 0xD
   428  007D                     	ds	1
   429                           
   430                           	psect	cstackBANK0
   431  0020                     __pcstackBANK0:	
   432  0020                     ??_LCD_Init:	
   433                           
   434                           ; 1 bytes @ 0x0
   435  0020                     	ds	2
   436  0022                     ??_main:	
   437                           
   438                           ; 1 bytes @ 0x2
   439  0022                     	ds	2
   440  0024                     main@lcd:	
   441                           
   442                           ; 5 bytes @ 0x4
   443  0024                     	ds	5
   444  0029                     main@i:	
   445                           
   446                           ; 1 bytes @ 0x9
   447  0029                     	ds	1
   448                           
   449                           	psect	maintext
   450  0559                     __pmaintext:	
   451 ;;
   452 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   453 ;;
   454 ;; *************** function _main *****************
   455 ;; Defined at:
   456 ;;		line 36 in file "example.c"
   457 ;; Parameters:    Size  Location     Type
   458 ;;		None
   459 ;; Auto vars:     Size  Location     Type
   460 ;;  i               1    9[BANK0 ] unsigned char 
   461 ;;  lcd             5    4[BANK0 ] struct .
   462 ;; Return value:  Size  Location     Type
   463 ;;                  2   81[None  ] int 
   464 ;; Registers used:
   465 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   466 ;; Tracked objects:
   467 ;;		On entry : B00/0
   468 ;;		On exit  : 0/0
   469 ;;		Unchanged: 0/0
   470 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   471 ;;      Params:         0       0       0       0       0
   472 ;;      Locals:         0       6       0       0       0
   473 ;;      Temps:          0       2       0       0       0
   474 ;;      Totals:         0       8       0       0       0
   475 ;;Total ram usage:        8 bytes
   476 ;; Hardware stack levels required when called:    3
   477 ;; This function calls:
   478 ;;		_LCD_Init
   479 ;;		_LCD_Write
   480 ;;		_LCD_putrs
   481 ;; This function is called by:
   482 ;;		Startup code after reset
   483 ;; This function uses a non-reentrant model
   484 ;;
   485                           
   486                           
   487                           ;psect for function _main
   488  0559                     _main:	
   489  0559                     l952:	
   490                           ;incstack = 0
   491                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   492                           
   493                           
   494                           ;example.c: 37:     LCD lcd = { &PORTC, 0, 1, 2, 3, 4, 5 };
   495  0559  3024               	movlw	main@lcd& (0+255)
   496  055A  0084               	movwf	4
   497  055B  1283               	bcf	3,5	;RP0=0, select bank0
   498  055C  1303               	bcf	3,6	;RP1=0, select bank0
   499  055D  082F               	movf	main@F1468,w
   500  055E  1383               	bcf	3,7	;select IRP bank0
   501  055F  0080               	movwf	0
   502  0560  0A84               	incf	4,f
   503  0561  0830               	movf	main@F1468+1,w
   504  0562  0080               	movwf	0
   505  0563  0A84               	incf	4,f
   506  0564  0831               	movf	main@F1468+2,w
   507  0565  0080               	movwf	0
   508  0566  0A84               	incf	4,f
   509  0567  0832               	movf	main@F1468+3,w
   510  0568  0080               	movwf	0
   511  0569  0A84               	incf	4,f
   512  056A  0833               	movf	main@F1468+4,w
   513  056B  0080               	movwf	0
   514  056C                     l954:	
   515                           
   516                           ;example.c: 39:     LCD_Init(lcd);
   517  056C  3078               	movlw	LCD_Init@display& (0+255)
   518  056D  0084               	movwf	4
   519  056E  0824               	movf	main@lcd,w
   520  056F  0080               	movwf	0
   521  0570  0A84               	incf	4,f
   522  0571  0825               	movf	main@lcd+1,w
   523  0572  0080               	movwf	0
   524  0573  0A84               	incf	4,f
   525  0574  0826               	movf	main@lcd+2,w
   526  0575  0080               	movwf	0
   527  0576  0A84               	incf	4,f
   528  0577  0827               	movf	main@lcd+3,w
   529  0578  0080               	movwf	0
   530  0579  0A84               	incf	4,f
   531  057A  0828               	movf	main@lcd+4,w
   532  057B  0080               	movwf	0
   533  057C  120A  118A  2658  120A  118A  	fcall	_LCD_Init
   534  0581                     l956:	
   535  0581  3000               	movlw	0
   536  0582  120A  118A  24FE  120A  118A  	fcall	_LCD_Write
   537  0587                     l958:	
   538  0587  3001               	movlw	1
   539  0588  120A  118A  24FE  120A  118A  	fcall	_LCD_Write
   540  058D                     l962:	
   541  058D  300C               	movlw	12
   542  058E  120A  118A  24FE  120A  118A  	fcall	_LCD_Write
   543  0593  3000               	movlw	0
   544  0594  120A  118A  24FE  120A  118A  	fcall	_LCD_Write
   545  0599                     l103:	
   546                           
   547                           ;example.c: 45:         LCD_putrs("HELLO");
   548  0599  3001               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
   549  059A  120A  118A  24D9  120A  118A  	fcall	_LCD_putrs
   550  059F                     l968:	
   551                           
   552                           ;example.c: 47:   for ( unsigned char i = 0; i < 100; ++i ) {
   553  059F  1283               	bcf	3,5	;RP0=0, select bank0
   554  05A0  1303               	bcf	3,6	;RP1=0, select bank0
   555  05A1  01A9               	clrf	main@i
   556  05A2                     l974:	
   557                           
   558                           ;example.c: 48:     _delay((unsigned long)((10)*(4000000/4000.0)));
   559  05A2  300D               	movlw	13
   560  05A3  1283               	bcf	3,5	;RP0=0, select bank0
   561  05A4  1303               	bcf	3,6	;RP1=0, select bank0
   562  05A5  00A3               	movwf	??_main+1
   563  05A6  30FB               	movlw	251
   564  05A7  00A2               	movwf	??_main
   565  05A8                     u577:	
   566  05A8  0BA2               	decfsz	??_main,f
   567  05A9  2DA8               	goto	u577
   568  05AA  0BA3               	decfsz	??_main+1,f
   569  05AB  2DA8               	goto	u577
   570  05AC                     l976:	
   571                           
   572                           ;example.c: 49:    }
   573  05AC  3001               	movlw	1
   574  05AD  1283               	bcf	3,5	;RP0=0, select bank0
   575  05AE  1303               	bcf	3,6	;RP1=0, select bank0
   576  05AF  00A2               	movwf	??_main
   577  05B0  0822               	movf	??_main,w
   578  05B1  07A9               	addwf	main@i,f
   579  05B2                     l978:	
   580  05B2  3064               	movlw	100
   581  05B3  0229               	subwf	main@i,w
   582  05B4  1C03               	skipc
   583  05B5  2DB7               	goto	u561
   584  05B6  2DB8               	goto	u560
   585  05B7                     u561:	
   586  05B7  2DA2               	goto	l974
   587  05B8                     u560:	
   588  05B8  2D81               	goto	l956
   589  05B9  120A  118A  2800   	ljmp	start
   590  05BC                     __end_of_main:	
   591                           
   592                           	psect	text1
   593  04D9                     __ptext1:	
   594 ;; *************** function _LCD_putrs *****************
   595 ;; Defined at:
   596 ;;		line 144 in file "lcd.c"
   597 ;; Parameters:    Size  Location     Type
   598 ;;  a               1    wreg     PTR const unsigned char 
   599 ;;		 -> STR_1(6), 
   600 ;; Auto vars:     Size  Location     Type
   601 ;;  a               1   10[COMMON] PTR const unsigned char 
   602 ;;		 -> STR_1(6), 
   603 ;;  i               2    8[COMMON] int 
   604 ;; Return value:  Size  Location     Type
   605 ;;                  1    wreg      void 
   606 ;; Registers used:
   607 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   608 ;; Tracked objects:
   609 ;;		On entry : 0/0
   610 ;;		On exit  : 0/0
   611 ;;		Unchanged: 0/0
   612 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   613 ;;      Params:         0       0       0       0       0
   614 ;;      Locals:         3       0       0       0       0
   615 ;;      Temps:          0       0       0       0       0
   616 ;;      Totals:         3       0       0       0       0
   617 ;;Total ram usage:        3 bytes
   618 ;; Hardware stack levels used:    1
   619 ;; Hardware stack levels required when called:    2
   620 ;; This function calls:
   621 ;;		_LCD_putc
   622 ;; This function is called by:
   623 ;;		_main
   624 ;; This function uses a non-reentrant model
   625 ;;
   626                           
   627                           
   628                           ;psect for function _LCD_putrs
   629  04D9                     _LCD_putrs:	
   630                           
   631                           ;incstack = 0
   632                           ; Regs used in _LCD_putrs: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   633                           ;LCD_putrs@a stored from wreg
   634  04D9  00FA               	movwf	LCD_putrs@a
   635  04DA                     l936:	
   636                           
   637                           ;lcd.c: 146:     for ( int i = 0; a[i] != '\0'; ++i ) {
   638  04DA  01F8               	clrf	LCD_putrs@i
   639  04DB  01F9               	clrf	LCD_putrs@i+1
   640  04DC  2CF0               	goto	l942
   641  04DD                     l938:	
   642                           
   643                           ;lcd.c: 147:         LCD_putc(a[i]);
   644  04DD  0878               	movf	LCD_putrs@i,w
   645  04DE  077A               	addwf	LCD_putrs@a,w
   646  04DF  0084               	movwf	4
   647  04E0  120A  118A  2003  120A  118A  	fcall	stringdir
   648  04E5  120A  118A  25BC  120A  118A  	fcall	_LCD_putc
   649  04EA                     l940:	
   650                           
   651                           ;lcd.c: 148:     }
   652  04EA  3001               	movlw	1
   653  04EB  07F8               	addwf	LCD_putrs@i,f
   654  04EC  1803               	skipnc
   655  04ED  0AF9               	incf	LCD_putrs@i+1,f
   656  04EE  3000               	movlw	0
   657  04EF  07F9               	addwf	LCD_putrs@i+1,f
   658  04F0                     l942:	
   659  04F0  0878               	movf	LCD_putrs@i,w
   660  04F1  077A               	addwf	LCD_putrs@a,w
   661  04F2  0084               	movwf	4
   662  04F3  120A  118A  2003  120A  118A  	fcall	stringdir
   663  04F8  3A00               	xorlw	0
   664  04F9  1D03               	skipz
   665  04FA  2CFC               	goto	u541
   666  04FB  2CFD               	goto	u540
   667  04FC                     u541:	
   668  04FC  2CDD               	goto	l938
   669  04FD                     u540:	
   670  04FD                     l67:	
   671  04FD  0008               	return
   672  04FE                     __end_of_LCD_putrs:	
   673                           
   674                           	psect	text2
   675  05BC                     __ptext2:	
   676 ;; *************** function _LCD_putc *****************
   677 ;; Defined at:
   678 ;;		line 119 in file "lcd.c"
   679 ;; Parameters:    Size  Location     Type
   680 ;;  c               1    wreg     unsigned char 
   681 ;; Auto vars:     Size  Location     Type
   682 ;;  c               1    7[COMMON] unsigned char 
   683 ;; Return value:  Size  Location     Type
   684 ;;                  1    wreg      void 
   685 ;; Registers used:
   686 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   687 ;; Tracked objects:
   688 ;;		On entry : 0/0
   689 ;;		On exit  : 0/0
   690 ;;		Unchanged: 0/0
   691 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   692 ;;      Params:         0       0       0       0       0
   693 ;;      Locals:         1       0       0       0       0
   694 ;;      Temps:          3       0       0       0       0
   695 ;;      Totals:         4       0       0       0       0
   696 ;;Total ram usage:        4 bytes
   697 ;; Hardware stack levels used:    1
   698 ;; Hardware stack levels required when called:    1
   699 ;; This function calls:
   700 ;;		_LCD_Out
   701 ;; This function is called by:
   702 ;;		_LCD_putrs
   703 ;;		_LCD_puts
   704 ;; This function uses a non-reentrant model
   705 ;;
   706                           
   707                           
   708                           ;psect for function _LCD_putc
   709  05BC                     _LCD_putc:	
   710                           
   711                           ;incstack = 0
   712                           ; Regs used in _LCD_putc: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   713                           ;LCD_putc@c stored from wreg
   714  05BC  00F7               	movwf	LCD_putc@c
   715  05BD                     l874:	
   716                           
   717                           ;lcd.c: 121:    *(lcd.PORT) |= 1 << lcd.RS;
   718  05BD  3001               	movlw	1
   719  05BE  00F4               	movwf	??_LCD_putc
   720  05BF  1283               	bcf	3,5	;RP0=0, select bank0
   721  05C0  1303               	bcf	3,6	;RP1=0, select bank0
   722  05C1  082C               	movf	_lcd+2,w
   723  05C2  3907               	andlw	7
   724  05C3  3E01               	addlw	1
   725  05C4  2DC7               	goto	u444
   726  05C5                     u445:	
   727  05C5  1003               	clrc
   728  05C6  0DF4               	rlf	??_LCD_putc,f
   729  05C7                     u444:	
   730  05C7  3EFF               	addlw	-1
   731  05C8  1D03               	skipz
   732  05C9  2DC5               	goto	u445
   733  05CA  0874               	movf	??_LCD_putc,w
   734  05CB  00F5               	movwf	??_LCD_putc+1
   735  05CC  082A               	movf	_lcd,w
   736  05CD  0084               	movwf	4
   737  05CE  1783               	bsf	3,7
   738  05CF  1C2B               	btfss	_lcd+1,0
   739  05D0  1383               	bcf	3,7
   740  05D1  0875               	movf	??_LCD_putc+1,w
   741  05D2  0480               	iorwf	0,f
   742  05D3                     l876:	
   743                           
   744                           ;lcd.c: 122:     LCD_Out((c & 0xF0) >> 4);
   745  05D3  0877               	movf	LCD_putc@c,w
   746  05D4  00F4               	movwf	??_LCD_putc
   747  05D5  3004               	movlw	4
   748  05D6                     u455:	
   749  05D6  1003               	clrc
   750  05D7  0CF4               	rrf	??_LCD_putc,f
   751  05D8  3EFF               	addlw	-1
   752  05D9  1D03               	skipz
   753  05DA  2DD6               	goto	u455
   754  05DB  0874               	movf	??_LCD_putc,w
   755  05DC  390F               	andlw	15
   756  05DD  120A  118A  270F  120A  118A  	fcall	_LCD_Out
   757  05E2                     l878:	
   758                           
   759                           ;lcd.c: 124:     *(lcd.PORT) |= 1 << lcd.EN;
   760  05E2  3001               	movlw	1
   761  05E3  00F4               	movwf	??_LCD_putc
   762  05E4  1283               	bcf	3,5	;RP0=0, select bank0
   763  05E5  1303               	bcf	3,6	;RP1=0, select bank0
   764  05E6  0C2C               	rrf	_lcd+2,w
   765  05E7  00F5               	movwf	??_LCD_putc+1
   766  05E8  0CF5               	rrf	??_LCD_putc+1,f
   767  05E9  0C75               	rrf	??_LCD_putc+1,w
   768  05EA  3907               	andlw	7
   769  05EB  3E01               	addlw	1
   770  05EC  2DEF               	goto	u464
   771  05ED                     u465:	
   772  05ED  1003               	clrc
   773  05EE  0DF4               	rlf	??_LCD_putc,f
   774  05EF                     u464:	
   775  05EF  3EFF               	addlw	-1
   776  05F0  1D03               	skipz
   777  05F1  2DED               	goto	u465
   778  05F2  0874               	movf	??_LCD_putc,w
   779  05F3  00F6               	movwf	??_LCD_putc+2
   780  05F4  082A               	movf	_lcd,w
   781  05F5  0084               	movwf	4
   782  05F6  1783               	bsf	3,7
   783  05F7  1C2B               	btfss	_lcd+1,0
   784  05F8  1383               	bcf	3,7
   785  05F9  0876               	movf	??_LCD_putc+2,w
   786  05FA  0480               	iorwf	0,f
   787  05FB                     l880:	
   788                           
   789                           ;lcd.c: 125:     _delay((unsigned long)((40)*(4000000/4000000.0)));
   790  05FB  300D               	movlw	13
   791  05FC  00F4               	movwf	??_LCD_putc
   792  05FD                     u587:	
   793  05FD  0BF4               	decfsz	??_LCD_putc,f
   794  05FE  2DFD               	goto	u587
   795  05FF                     l882:	
   796                           
   797                           ;lcd.c: 126:     *(lcd.PORT) &= ~(1 << lcd.EN);
   798  05FF  3001               	movlw	1
   799  0600  00F4               	movwf	??_LCD_putc
   800  0601  1283               	bcf	3,5	;RP0=0, select bank0
   801  0602  1303               	bcf	3,6	;RP1=0, select bank0
   802  0603  0C2C               	rrf	_lcd+2,w
   803  0604  00F5               	movwf	??_LCD_putc+1
   804  0605  0CF5               	rrf	??_LCD_putc+1,f
   805  0606  0C75               	rrf	??_LCD_putc+1,w
   806  0607  3907               	andlw	7
   807  0608  3E01               	addlw	1
   808  0609  2E0C               	goto	u474
   809  060A                     u475:	
   810  060A  1003               	clrc
   811  060B  0DF4               	rlf	??_LCD_putc,f
   812  060C                     u474:	
   813  060C  3EFF               	addlw	-1
   814  060D  1D03               	skipz
   815  060E  2E0A               	goto	u475
   816  060F  0874               	movf	??_LCD_putc,w
   817  0610  3AFF               	xorlw	255
   818  0611  00F6               	movwf	??_LCD_putc+2
   819  0612  082A               	movf	_lcd,w
   820  0613  0084               	movwf	4
   821  0614  1783               	bsf	3,7
   822  0615  1C2B               	btfss	_lcd+1,0
   823  0616  1383               	bcf	3,7
   824  0617  0876               	movf	??_LCD_putc+2,w
   825  0618  0580               	andwf	0,f
   826  0619                     l884:	
   827                           
   828                           ;lcd.c: 128:     LCD_Out(c & 0x0F);
   829  0619  0877               	movf	LCD_putc@c,w
   830  061A  390F               	andlw	15
   831  061B  120A  118A  270F  120A  118A  	fcall	_LCD_Out
   832  0620                     l886:	
   833                           
   834                           ;lcd.c: 130:     *(lcd.PORT) |= 1 << lcd.EN;
   835  0620  3001               	movlw	1
   836  0621  00F4               	movwf	??_LCD_putc
   837  0622  1283               	bcf	3,5	;RP0=0, select bank0
   838  0623  1303               	bcf	3,6	;RP1=0, select bank0
   839  0624  0C2C               	rrf	_lcd+2,w
   840  0625  00F5               	movwf	??_LCD_putc+1
   841  0626  0CF5               	rrf	??_LCD_putc+1,f
   842  0627  0C75               	rrf	??_LCD_putc+1,w
   843  0628  3907               	andlw	7
   844  0629  3E01               	addlw	1
   845  062A  2E2D               	goto	u484
   846  062B                     u485:	
   847  062B  1003               	clrc
   848  062C  0DF4               	rlf	??_LCD_putc,f
   849  062D                     u484:	
   850  062D  3EFF               	addlw	-1
   851  062E  1D03               	skipz
   852  062F  2E2B               	goto	u485
   853  0630  0874               	movf	??_LCD_putc,w
   854  0631  00F6               	movwf	??_LCD_putc+2
   855  0632  082A               	movf	_lcd,w
   856  0633  0084               	movwf	4
   857  0634  1783               	bsf	3,7
   858  0635  1C2B               	btfss	_lcd+1,0
   859  0636  1383               	bcf	3,7
   860  0637  0876               	movf	??_LCD_putc+2,w
   861  0638  0480               	iorwf	0,f
   862                           
   863                           ;lcd.c: 131:     _delay((unsigned long)((40)*(4000000/4000000.0)));
   864  0639  300D               	movlw	13
   865  063A  00F4               	movwf	??_LCD_putc
   866  063B                     u597:	
   867  063B  0BF4               	decfsz	??_LCD_putc,f
   868  063C  2E3B               	goto	u597
   869  063D                     l888:	
   870                           
   871                           ;lcd.c: 132:     *(lcd.PORT) &= ~(1 << lcd.EN);
   872  063D  3001               	movlw	1
   873  063E  00F4               	movwf	??_LCD_putc
   874  063F  1283               	bcf	3,5	;RP0=0, select bank0
   875  0640  1303               	bcf	3,6	;RP1=0, select bank0
   876  0641  0C2C               	rrf	_lcd+2,w
   877  0642  00F5               	movwf	??_LCD_putc+1
   878  0643  0CF5               	rrf	??_LCD_putc+1,f
   879  0644  0C75               	rrf	??_LCD_putc+1,w
   880  0645  3907               	andlw	7
   881  0646  3E01               	addlw	1
   882  0647  2E4A               	goto	u494
   883  0648                     u495:	
   884  0648  1003               	clrc
   885  0649  0DF4               	rlf	??_LCD_putc,f
   886  064A                     u494:	
   887  064A  3EFF               	addlw	-1
   888  064B  1D03               	skipz
   889  064C  2E48               	goto	u495
   890  064D  0874               	movf	??_LCD_putc,w
   891  064E  3AFF               	xorlw	255
   892  064F  00F6               	movwf	??_LCD_putc+2
   893  0650  082A               	movf	_lcd,w
   894  0651  0084               	movwf	4
   895  0652  1783               	bsf	3,7
   896  0653  1C2B               	btfss	_lcd+1,0
   897  0654  1383               	bcf	3,7
   898  0655  0876               	movf	??_LCD_putc+2,w
   899  0656  0580               	andwf	0,f
   900  0657                     l55:	
   901  0657  0008               	return
   902  0658                     __end_of_LCD_putc:	
   903                           
   904                           	psect	text3
   905  0658                     __ptext3:	
   906 ;; *************** function _LCD_Init *****************
   907 ;; Defined at:
   908 ;;		line 61 in file "lcd.c"
   909 ;; Parameters:    Size  Location     Type
   910 ;;  display         5    8[COMMON] struct .
   911 ;; Auto vars:     Size  Location     Type
   912 ;;  cmd             1   13[COMMON] unsigned char 
   913 ;; Return value:  Size  Location     Type
   914 ;;                  1    wreg      _Bool 
   915 ;; Registers used:
   916 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   917 ;; Tracked objects:
   918 ;;		On entry : 0/0
   919 ;;		On exit  : 0/0
   920 ;;		Unchanged: 0/0
   921 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   922 ;;      Params:         5       0       0       0       0
   923 ;;      Locals:         1       0       0       0       0
   924 ;;      Temps:          0       2       0       0       0
   925 ;;      Totals:         6       2       0       0       0
   926 ;;Total ram usage:        8 bytes
   927 ;; Hardware stack levels used:    1
   928 ;; Hardware stack levels required when called:    2
   929 ;; This function calls:
   930 ;;		_LCD_Write
   931 ;; This function is called by:
   932 ;;		_main
   933 ;; This function uses a non-reentrant model
   934 ;;
   935                           
   936                           
   937                           ;psect for function _LCD_Init
   938  0658                     _LCD_Init:	
   939  0658                     l890:	
   940                           ;incstack = 0
   941                           ; Regs used in _LCD_Init: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   942                           
   943                           
   944                           ;lcd.c: 63:     lcd = display;
   945  0658  302A               	movlw	_lcd& (0+255)
   946  0659  0084               	movwf	4
   947  065A  0878               	movf	LCD_Init@display,w
   948  065B  1383               	bcf	3,7	;select IRP bank0
   949  065C  0080               	movwf	0
   950  065D  0A84               	incf	4,f
   951  065E  0879               	movf	LCD_Init@display+1,w
   952  065F  0080               	movwf	0
   953  0660  0A84               	incf	4,f
   954  0661  087A               	movf	LCD_Init@display+2,w
   955  0662  0080               	movwf	0
   956  0663  0A84               	incf	4,f
   957  0664  087B               	movf	LCD_Init@display+3,w
   958  0665  0080               	movwf	0
   959  0666  0A84               	incf	4,f
   960  0667  087C               	movf	LCD_Init@display+4,w
   961  0668  0080               	movwf	0
   962  0669                     l892:	
   963                           
   964                           ;lcd.c: 72:     if ( lcd.PORT == &PORTA ) {
   965  0669  3000               	movlw	0
   966  066A  1283               	bcf	3,5	;RP0=0, select bank0
   967  066B  1303               	bcf	3,6	;RP1=0, select bank0
   968  066C  062B               	xorwf	_lcd+1,w
   969  066D  1D03               	skipz
   970  066E  2E71               	goto	u505
   971  066F  3005               	movlw	5
   972  0670  062A               	xorwf	_lcd,w
   973  0671                     u505:	
   974  0671  1D03               	skipz
   975  0672  2E74               	goto	u501
   976  0673  2E75               	goto	u500
   977  0674                     u501:	
   978  0674  2E79               	goto	l896
   979  0675                     u500:	
   980  0675                     l894:	
   981                           
   982                           ;lcd.c: 73:         TRISA = 0x00;
   983  0675  1683               	bsf	3,5	;RP0=1, select bank1
   984  0676  1303               	bcf	3,6	;RP1=0, select bank1
   985  0677  0185               	clrf	5	;volatile
   986                           
   987                           ;lcd.c: 74:     }
   988  0678  2E94               	goto	l904
   989  0679                     l896:	
   990  0679  3000               	movlw	0
   991  067A  062B               	xorwf	_lcd+1,w
   992  067B  1D03               	skipz
   993  067C  2E7F               	goto	u515
   994  067D  3006               	movlw	6
   995  067E  062A               	xorwf	_lcd,w
   996  067F                     u515:	
   997  067F  1D03               	skipz
   998  0680  2E82               	goto	u511
   999  0681  2E83               	goto	u510
  1000  0682                     u511:	
  1001  0682  2E87               	goto	l900
  1002  0683                     u510:	
  1003  0683                     l898:	
  1004                           
  1005                           ;lcd.c: 76:         TRISB = 0x00;
  1006  0683  1683               	bsf	3,5	;RP0=1, select bank1
  1007  0684  1303               	bcf	3,6	;RP1=0, select bank1
  1008  0685  0186               	clrf	6	;volatile
  1009                           
  1010                           ;lcd.c: 77:     }
  1011  0686  2E94               	goto	l904
  1012  0687                     l900:	
  1013  0687  3000               	movlw	0
  1014  0688  062B               	xorwf	_lcd+1,w
  1015  0689  1D03               	skipz
  1016  068A  2E8D               	goto	u525
  1017  068B  3007               	movlw	7
  1018  068C  062A               	xorwf	_lcd,w
  1019  068D                     u525:	
  1020  068D  1D03               	skipz
  1021  068E  2E90               	goto	u521
  1022  068F  2E91               	goto	u520
  1023  0690                     u521:	
  1024  0690  2F0E               	goto	l39
  1025  0691                     u520:	
  1026  0691                     l902:	
  1027                           
  1028                           ;lcd.c: 79:         TRISC = 0x00;
  1029  0691  1683               	bsf	3,5	;RP0=1, select bank1
  1030  0692  1303               	bcf	3,6	;RP1=0, select bank1
  1031  0693  0187               	clrf	7	;volatile
  1032  0694                     l904:	
  1033                           ;lcd.c: 80:     }
  1034                           
  1035                           
  1036                           ;lcd.c: 94:     _delay((unsigned long)((20)*(4000000/4000.0)));
  1037  0694  301A               	movlw	26
  1038  0695  1283               	bcf	3,5	;RP0=0, select bank0
  1039  0696  1303               	bcf	3,6	;RP1=0, select bank0
  1040  0697  00A1               	movwf	??_LCD_Init+1
  1041  0698  30F7               	movlw	247
  1042  0699  00A0               	movwf	??_LCD_Init
  1043  069A                     u607:	
  1044  069A  0BA0               	decfsz	??_LCD_Init,f
  1045  069B  2E9A               	goto	u607
  1046  069C  0BA1               	decfsz	??_LCD_Init+1,f
  1047  069D  2E9A               	goto	u607
  1048  069E  2E9F               	nop2
  1049  069F                     l906:	
  1050                           
  1051                           ;lcd.c: 97:     LCD_Write(0x03);
  1052  069F  3003               	movlw	3
  1053  06A0  120A  118A  24FE  120A  118A  	fcall	_LCD_Write
  1054  06A5                     l908:	
  1055                           
  1056                           ;lcd.c: 98:     _delay((unsigned long)((5)*(4000000/4000.0)));
  1057  06A5  3007               	movlw	7
  1058  06A6  1283               	bcf	3,5	;RP0=0, select bank0
  1059  06A7  1303               	bcf	3,6	;RP1=0, select bank0
  1060  06A8  00A1               	movwf	??_LCD_Init+1
  1061  06A9  307C               	movlw	124
  1062  06AA  00A0               	movwf	??_LCD_Init
  1063  06AB                     u617:	
  1064  06AB  0BA0               	decfsz	??_LCD_Init,f
  1065  06AC  2EAB               	goto	u617
  1066  06AD  0BA1               	decfsz	??_LCD_Init+1,f
  1067  06AE  2EAB               	goto	u617
  1068  06AF  0000               	nop
  1069                           
  1070                           ;lcd.c: 99:     LCD_Write(0x03);
  1071  06B0  3003               	movlw	3
  1072  06B1  120A  118A  24FE  120A  118A  	fcall	_LCD_Write
  1073  06B6                     l910:	
  1074                           
  1075                           ;lcd.c: 100:     _delay((unsigned long)((16)*(4000000/4000.0)));
  1076  06B6  3015               	movlw	21
  1077  06B7  1283               	bcf	3,5	;RP0=0, select bank0
  1078  06B8  1303               	bcf	3,6	;RP1=0, select bank0
  1079  06B9  00A1               	movwf	??_LCD_Init+1
  1080  06BA  30C5               	movlw	197
  1081  06BB  00A0               	movwf	??_LCD_Init
  1082  06BC                     u627:	
  1083  06BC  0BA0               	decfsz	??_LCD_Init,f
  1084  06BD  2EBC               	goto	u627
  1085  06BE  0BA1               	decfsz	??_LCD_Init+1,f
  1086  06BF  2EBC               	goto	u627
  1087  06C0  2EC1               	nop2
  1088  06C1                     l912:	
  1089                           
  1090                           ;lcd.c: 101:     LCD_Write(0x03);
  1091  06C1  3003               	movlw	3
  1092  06C2  120A  118A  24FE  120A  118A  	fcall	_LCD_Write
  1093  06C7                     l914:	
  1094                           
  1095                           ;lcd.c: 104:     LCD_Write(0x02);
  1096  06C7  3002               	movlw	2
  1097  06C8  120A  118A  24FE  120A  118A  	fcall	_LCD_Write
  1098  06CD                     l916:	
  1099  06CD  3002               	movlw	2
  1100  06CE  120A  118A  24FE  120A  118A  	fcall	_LCD_Write
  1101  06D3                     l918:	
  1102  06D3  3008               	movlw	8
  1103  06D4  120A  118A  24FE  120A  118A  	fcall	_LCD_Write
  1104  06D9                     l920:	
  1105  06D9  3000               	movlw	0
  1106  06DA  120A  118A  24FE  120A  118A  	fcall	_LCD_Write
  1107  06DF                     l922:	
  1108  06DF  3006               	movlw	6
  1109  06E0  120A  118A  24FE  120A  118A  	fcall	_LCD_Write
  1110  06E5                     l924:	
  1111  06E5  3008               	movlw	8
  1112  06E6  1283               	bcf	3,5	;RP0=0, select bank0
  1113  06E7  1303               	bcf	3,6	;RP1=0, select bank0
  1114  06E8  00A0               	movwf	??_LCD_Init
  1115  06E9  0820               	movf	??_LCD_Init,w
  1116  06EA  00FD               	movwf	LCD_Init@cmd
  1117  06EB                     l926:	
  1118  06EB  157D               	bsf	LCD_Init@cmd,2
  1119  06EC                     l932:	
  1120  06EC  087D               	movf	LCD_Init@cmd,w
  1121  06ED  00A0               	movwf	??_LCD_Init
  1122  06EE  3004               	movlw	4
  1123  06EF                     u535:	
  1124  06EF  1003               	clrc
  1125  06F0  0CA0               	rrf	??_LCD_Init,f
  1126  06F1  3EFF               	addlw	-1
  1127  06F2  1D03               	skipz
  1128  06F3  2EEF               	goto	u535
  1129  06F4  0820               	movf	??_LCD_Init,w
  1130  06F5  390F               	andlw	15
  1131  06F6  120A  118A  24FE  120A  118A  	fcall	_LCD_Write
  1132  06FB  087D               	movf	LCD_Init@cmd,w
  1133  06FC  390F               	andlw	15
  1134  06FD  120A  118A  24FE  120A  118A  	fcall	_LCD_Write
  1135  0702                     l51:	
  1136                           ;lcd.c: 114:     do { LCD_Write( (0x01 & 0xF0) >> 4 ); LCD_Write( 0x01 & 0x0F); } while 
      +                          ( 0 );
  1137                           
  1138  0702  3000               	movlw	0
  1139  0703  120A  118A  24FE  120A  118A  	fcall	_LCD_Write
  1140  0708  3001               	movlw	1
  1141  0709  120A  118A  24FE  120A  118A  	fcall	_LCD_Write
  1142  070E                     l39:	
  1143  070E  0008               	return
  1144  070F                     __end_of_LCD_Init:	
  1145                           
  1146                           	psect	text4
  1147  04FE                     __ptext4:	
  1148 ;; *************** function _LCD_Write *****************
  1149 ;; Defined at:
  1150 ;;		line 50 in file "lcd.c"
  1151 ;; Parameters:    Size  Location     Type
  1152 ;;  c               1    wreg     unsigned char 
  1153 ;; Auto vars:     Size  Location     Type
  1154 ;;  c               1    7[COMMON] unsigned char 
  1155 ;; Return value:  Size  Location     Type
  1156 ;;                  1    wreg      void 
  1157 ;; Registers used:
  1158 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1159 ;; Tracked objects:
  1160 ;;		On entry : 0/0
  1161 ;;		On exit  : 0/0
  1162 ;;		Unchanged: 0/0
  1163 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1164 ;;      Params:         0       0       0       0       0
  1165 ;;      Locals:         1       0       0       0       0
  1166 ;;      Temps:          3       0       0       0       0
  1167 ;;      Totals:         4       0       0       0       0
  1168 ;;Total ram usage:        4 bytes
  1169 ;; Hardware stack levels used:    1
  1170 ;; Hardware stack levels required when called:    1
  1171 ;; This function calls:
  1172 ;;		_LCD_Out
  1173 ;; This function is called by:
  1174 ;;		_LCD_Init
  1175 ;;		_main
  1176 ;; This function uses a non-reentrant model
  1177 ;;
  1178                           
  1179                           
  1180                           ;psect for function _LCD_Write
  1181  04FE                     _LCD_Write:	
  1182                           
  1183                           ;incstack = 0
  1184                           ; Regs used in _LCD_Write: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1185                           ;LCD_Write@c stored from wreg
  1186  04FE  00F7               	movwf	LCD_Write@c
  1187  04FF                     l864:	
  1188                           
  1189                           ;lcd.c: 52:     *(lcd.PORT) &= ~(1 << lcd.RS);
  1190  04FF  3001               	movlw	1
  1191  0500  00F4               	movwf	??_LCD_Write
  1192  0501  1283               	bcf	3,5	;RP0=0, select bank0
  1193  0502  1303               	bcf	3,6	;RP1=0, select bank0
  1194  0503  082C               	movf	_lcd+2,w
  1195  0504  3907               	andlw	7
  1196  0505  3E01               	addlw	1
  1197  0506  2D09               	goto	u414
  1198  0507                     u415:	
  1199  0507  1003               	clrc
  1200  0508  0DF4               	rlf	??_LCD_Write,f
  1201  0509                     u414:	
  1202  0509  3EFF               	addlw	-1
  1203  050A  1D03               	skipz
  1204  050B  2D07               	goto	u415
  1205  050C  0874               	movf	??_LCD_Write,w
  1206  050D  3AFF               	xorlw	255
  1207  050E  00F5               	movwf	??_LCD_Write+1
  1208  050F  082A               	movf	_lcd,w
  1209  0510  0084               	movwf	4
  1210  0511  1783               	bsf	3,7
  1211  0512  1C2B               	btfss	_lcd+1,0
  1212  0513  1383               	bcf	3,7
  1213  0514  0875               	movf	??_LCD_Write+1,w
  1214  0515  0580               	andwf	0,f
  1215  0516                     l866:	
  1216                           
  1217                           ;lcd.c: 53:     LCD_Out(c);
  1218  0516  0877               	movf	LCD_Write@c,w
  1219  0517  120A  118A  270F  120A  118A  	fcall	_LCD_Out
  1220  051C                     l868:	
  1221                           
  1222                           ;lcd.c: 55:     *(lcd.PORT) |= 1 << lcd.EN;
  1223  051C  3001               	movlw	1
  1224  051D  00F4               	movwf	??_LCD_Write
  1225  051E  1283               	bcf	3,5	;RP0=0, select bank0
  1226  051F  1303               	bcf	3,6	;RP1=0, select bank0
  1227  0520  0C2C               	rrf	_lcd+2,w
  1228  0521  00F5               	movwf	??_LCD_Write+1
  1229  0522  0CF5               	rrf	??_LCD_Write+1,f
  1230  0523  0C75               	rrf	??_LCD_Write+1,w
  1231  0524  3907               	andlw	7
  1232  0525  3E01               	addlw	1
  1233  0526  2D29               	goto	u424
  1234  0527                     u425:	
  1235  0527  1003               	clrc
  1236  0528  0DF4               	rlf	??_LCD_Write,f
  1237  0529                     u424:	
  1238  0529  3EFF               	addlw	-1
  1239  052A  1D03               	skipz
  1240  052B  2D27               	goto	u425
  1241  052C  0874               	movf	??_LCD_Write,w
  1242  052D  00F6               	movwf	??_LCD_Write+2
  1243  052E  082A               	movf	_lcd,w
  1244  052F  0084               	movwf	4
  1245  0530  1783               	bsf	3,7
  1246  0531  1C2B               	btfss	_lcd+1,0
  1247  0532  1383               	bcf	3,7
  1248  0533  0876               	movf	??_LCD_Write+2,w
  1249  0534  0480               	iorwf	0,f
  1250  0535                     l870:	
  1251                           
  1252                           ;lcd.c: 56:     _delay((unsigned long)((4)*(4000000/4000.0)));
  1253  0535  3006               	movlw	6
  1254  0536  00F5               	movwf	??_LCD_Write+1
  1255  0537  3030               	movlw	48
  1256  0538  00F4               	movwf	??_LCD_Write
  1257  0539                     u637:	
  1258  0539  0BF4               	decfsz	??_LCD_Write,f
  1259  053A  2D39               	goto	u637
  1260  053B  0BF5               	decfsz	??_LCD_Write+1,f
  1261  053C  2D39               	goto	u637
  1262  053D  0000               	nop
  1263  053E                     l872:	
  1264                           
  1265                           ;lcd.c: 57:     *(lcd.PORT) &= ~(1 << lcd.EN);
  1266  053E  3001               	movlw	1
  1267  053F  00F4               	movwf	??_LCD_Write
  1268  0540  1283               	bcf	3,5	;RP0=0, select bank0
  1269  0541  1303               	bcf	3,6	;RP1=0, select bank0
  1270  0542  0C2C               	rrf	_lcd+2,w
  1271  0543  00F5               	movwf	??_LCD_Write+1
  1272  0544  0CF5               	rrf	??_LCD_Write+1,f
  1273  0545  0C75               	rrf	??_LCD_Write+1,w
  1274  0546  3907               	andlw	7
  1275  0547  3E01               	addlw	1
  1276  0548  2D4B               	goto	u434
  1277  0549                     u435:	
  1278  0549  1003               	clrc
  1279  054A  0DF4               	rlf	??_LCD_Write,f
  1280  054B                     u434:	
  1281  054B  3EFF               	addlw	-1
  1282  054C  1D03               	skipz
  1283  054D  2D49               	goto	u435
  1284  054E  0874               	movf	??_LCD_Write,w
  1285  054F  3AFF               	xorlw	255
  1286  0550  00F6               	movwf	??_LCD_Write+2
  1287  0551  082A               	movf	_lcd,w
  1288  0552  0084               	movwf	4
  1289  0553  1783               	bsf	3,7
  1290  0554  1C2B               	btfss	_lcd+1,0
  1291  0555  1383               	bcf	3,7
  1292  0556  0876               	movf	??_LCD_Write+2,w
  1293  0557  0580               	andwf	0,f
  1294  0558                     l30:	
  1295  0558  0008               	return
  1296  0559                     __end_of_LCD_Write:	
  1297                           
  1298                           	psect	text5
  1299  070F                     __ptext5:	
  1300 ;; *************** function _LCD_Out *****************
  1301 ;; Defined at:
  1302 ;;		line 18 in file "lcd.c"
  1303 ;; Parameters:    Size  Location     Type
  1304 ;;  c               1    wreg     unsigned char 
  1305 ;; Auto vars:     Size  Location     Type
  1306 ;;  c               1    3[COMMON] unsigned char 
  1307 ;; Return value:  Size  Location     Type
  1308 ;;                  1    wreg      void 
  1309 ;; Registers used:
  1310 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  1311 ;; Tracked objects:
  1312 ;;		On entry : 0/0
  1313 ;;		On exit  : 0/0
  1314 ;;		Unchanged: 0/0
  1315 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1316 ;;      Params:         0       0       0       0       0
  1317 ;;      Locals:         1       0       0       0       0
  1318 ;;      Temps:          3       0       0       0       0
  1319 ;;      Totals:         4       0       0       0       0
  1320 ;;Total ram usage:        4 bytes
  1321 ;; Hardware stack levels used:    1
  1322 ;; This function calls:
  1323 ;;		Nothing
  1324 ;; This function is called by:
  1325 ;;		_LCD_Write
  1326 ;;		_LCD_putc
  1327 ;; This function uses a non-reentrant model
  1328 ;;
  1329                           
  1330                           
  1331                           ;psect for function _LCD_Out
  1332  070F                     _LCD_Out:	
  1333                           
  1334                           ;incstack = 0
  1335                           ; Regs used in _LCD_Out: [wreg-fsr0h+status,2+status,0]
  1336                           ;LCD_Out@c stored from wreg
  1337  070F  00F3               	movwf	LCD_Out@c
  1338  0710                     l840:	
  1339                           
  1340                           ;lcd.c: 20:     if ( c & 1 ){
  1341  0710  1C73               	btfss	LCD_Out@c,0
  1342  0711  2F13               	goto	u291
  1343  0712  2F14               	goto	u290
  1344  0713                     u291:	
  1345  0713  2F2B               	goto	l844
  1346  0714                     u290:	
  1347  0714                     l842:	
  1348                           
  1349                           ;lcd.c: 21:         *(lcd.PORT) |= 1 << lcd.D4;
  1350  0714  3001               	movlw	1
  1351  0715  00F0               	movwf	??_LCD_Out
  1352  0716  1283               	bcf	3,5	;RP0=0, select bank0
  1353  0717  1303               	bcf	3,6	;RP1=0, select bank0
  1354  0718  082D               	movf	_lcd+3,w
  1355  0719  3907               	andlw	7
  1356  071A  3E01               	addlw	1
  1357  071B  2F1E               	goto	u304
  1358  071C                     u305:	
  1359  071C  1003               	clrc
  1360  071D  0DF0               	rlf	??_LCD_Out,f
  1361  071E                     u304:	
  1362  071E  3EFF               	addlw	-1
  1363  071F  1D03               	skipz
  1364  0720  2F1C               	goto	u305
  1365  0721  0870               	movf	??_LCD_Out,w
  1366  0722  00F1               	movwf	??_LCD_Out+1
  1367  0723  082A               	movf	_lcd,w
  1368  0724  0084               	movwf	4
  1369  0725  1783               	bsf	3,7
  1370  0726  1C2B               	btfss	_lcd+1,0
  1371  0727  1383               	bcf	3,7
  1372  0728  0871               	movf	??_LCD_Out+1,w
  1373  0729  0480               	iorwf	0,f
  1374                           
  1375                           ;lcd.c: 22:     }
  1376  072A  2F42               	goto	l846
  1377  072B                     l844:	
  1378                           
  1379                           ;lcd.c: 24:          *(lcd.PORT) &= ~(1 << lcd.D4);
  1380  072B  3001               	movlw	1
  1381  072C  00F0               	movwf	??_LCD_Out
  1382  072D  1283               	bcf	3,5	;RP0=0, select bank0
  1383  072E  1303               	bcf	3,6	;RP1=0, select bank0
  1384  072F  082D               	movf	_lcd+3,w
  1385  0730  3907               	andlw	7
  1386  0731  3E01               	addlw	1
  1387  0732  2F35               	goto	u314
  1388  0733                     u315:	
  1389  0733  1003               	clrc
  1390  0734  0DF0               	rlf	??_LCD_Out,f
  1391  0735                     u314:	
  1392  0735  3EFF               	addlw	-1
  1393  0736  1D03               	skipz
  1394  0737  2F33               	goto	u315
  1395  0738  0870               	movf	??_LCD_Out,w
  1396  0739  3AFF               	xorlw	255
  1397  073A  00F1               	movwf	??_LCD_Out+1
  1398  073B  082A               	movf	_lcd,w
  1399  073C  0084               	movwf	4
  1400  073D  1783               	bsf	3,7
  1401  073E  1C2B               	btfss	_lcd+1,0
  1402  073F  1383               	bcf	3,7
  1403  0740  0871               	movf	??_LCD_Out+1,w
  1404  0741  0580               	andwf	0,f
  1405  0742                     l846:	
  1406                           
  1407                           ;lcd.c: 27:     if ( c & 2 ) {
  1408  0742  1CF3               	btfss	LCD_Out@c,1
  1409  0743  2F45               	goto	u321
  1410  0744  2F46               	goto	u320
  1411  0745                     u321:	
  1412  0745  2F5E               	goto	l850
  1413  0746                     u320:	
  1414  0746                     l848:	
  1415                           
  1416                           ;lcd.c: 28:         *(lcd.PORT) |= 1 << lcd.D5;
  1417  0746  3001               	movlw	1
  1418  0747  00F0               	movwf	??_LCD_Out
  1419  0748  0C2D               	rrf	_lcd+3,w
  1420  0749  00F1               	movwf	??_LCD_Out+1
  1421  074A  0CF1               	rrf	??_LCD_Out+1,f
  1422  074B  0C71               	rrf	??_LCD_Out+1,w
  1423  074C  3907               	andlw	7
  1424  074D  3E01               	addlw	1
  1425  074E  2F51               	goto	u334
  1426  074F                     u335:	
  1427  074F  1003               	clrc
  1428  0750  0DF0               	rlf	??_LCD_Out,f
  1429  0751                     u334:	
  1430  0751  3EFF               	addlw	-1
  1431  0752  1D03               	skipz
  1432  0753  2F4F               	goto	u335
  1433  0754  0870               	movf	??_LCD_Out,w
  1434  0755  00F2               	movwf	??_LCD_Out+2
  1435  0756  082A               	movf	_lcd,w
  1436  0757  0084               	movwf	4
  1437  0758  1783               	bsf	3,7
  1438  0759  1C2B               	btfss	_lcd+1,0
  1439  075A  1383               	bcf	3,7
  1440  075B  0872               	movf	??_LCD_Out+2,w
  1441  075C  0480               	iorwf	0,f
  1442                           
  1443                           ;lcd.c: 29:     }
  1444  075D  2F76               	goto	l852
  1445  075E                     l850:	
  1446                           
  1447                           ;lcd.c: 31:         *(lcd.PORT) &= ~(1 << lcd.D5);
  1448  075E  3001               	movlw	1
  1449  075F  00F0               	movwf	??_LCD_Out
  1450  0760  0C2D               	rrf	_lcd+3,w
  1451  0761  00F1               	movwf	??_LCD_Out+1
  1452  0762  0CF1               	rrf	??_LCD_Out+1,f
  1453  0763  0C71               	rrf	??_LCD_Out+1,w
  1454  0764  3907               	andlw	7
  1455  0765  3E01               	addlw	1
  1456  0766  2F69               	goto	u344
  1457  0767                     u345:	
  1458  0767  1003               	clrc
  1459  0768  0DF0               	rlf	??_LCD_Out,f
  1460  0769                     u344:	
  1461  0769  3EFF               	addlw	-1
  1462  076A  1D03               	skipz
  1463  076B  2F67               	goto	u345
  1464  076C  0870               	movf	??_LCD_Out,w
  1465  076D  3AFF               	xorlw	255
  1466  076E  00F2               	movwf	??_LCD_Out+2
  1467  076F  082A               	movf	_lcd,w
  1468  0770  0084               	movwf	4
  1469  0771  1783               	bsf	3,7
  1470  0772  1C2B               	btfss	_lcd+1,0
  1471  0773  1383               	bcf	3,7
  1472  0774  0872               	movf	??_LCD_Out+2,w
  1473  0775  0580               	andwf	0,f
  1474  0776                     l852:	
  1475                           
  1476                           ;lcd.c: 34:     if ( c & 4 ) {
  1477  0776  1D73               	btfss	LCD_Out@c,2
  1478  0777  2F79               	goto	u351
  1479  0778  2F7A               	goto	u350
  1480  0779                     u351:	
  1481  0779  2F8F               	goto	l856
  1482  077A                     u350:	
  1483  077A                     l854:	
  1484                           
  1485                           ;lcd.c: 35:         *(lcd.PORT) |= 1 << lcd.D6;
  1486  077A  3001               	movlw	1
  1487  077B  00F0               	movwf	??_LCD_Out
  1488  077C  082E               	movf	_lcd+4,w
  1489  077D  3907               	andlw	7
  1490  077E  3E01               	addlw	1
  1491  077F  2F82               	goto	u364
  1492  0780                     u365:	
  1493  0780  1003               	clrc
  1494  0781  0DF0               	rlf	??_LCD_Out,f
  1495  0782                     u364:	
  1496  0782  3EFF               	addlw	-1
  1497  0783  1D03               	skipz
  1498  0784  2F80               	goto	u365
  1499  0785  0870               	movf	??_LCD_Out,w
  1500  0786  00F1               	movwf	??_LCD_Out+1
  1501  0787  082A               	movf	_lcd,w
  1502  0788  0084               	movwf	4
  1503  0789  1783               	bsf	3,7
  1504  078A  1C2B               	btfss	_lcd+1,0
  1505  078B  1383               	bcf	3,7
  1506  078C  0871               	movf	??_LCD_Out+1,w
  1507  078D  0480               	iorwf	0,f
  1508                           
  1509                           ;lcd.c: 36:     }
  1510  078E  2FA4               	goto	l858
  1511  078F                     l856:	
  1512                           
  1513                           ;lcd.c: 38:         *(lcd.PORT) &= ~(1 << lcd.D6);
  1514  078F  3001               	movlw	1
  1515  0790  00F0               	movwf	??_LCD_Out
  1516  0791  082E               	movf	_lcd+4,w
  1517  0792  3907               	andlw	7
  1518  0793  3E01               	addlw	1
  1519  0794  2F97               	goto	u374
  1520  0795                     u375:	
  1521  0795  1003               	clrc
  1522  0796  0DF0               	rlf	??_LCD_Out,f
  1523  0797                     u374:	
  1524  0797  3EFF               	addlw	-1
  1525  0798  1D03               	skipz
  1526  0799  2F95               	goto	u375
  1527  079A  0870               	movf	??_LCD_Out,w
  1528  079B  3AFF               	xorlw	255
  1529  079C  00F1               	movwf	??_LCD_Out+1
  1530  079D  082A               	movf	_lcd,w
  1531  079E  0084               	movwf	4
  1532  079F  1783               	bsf	3,7
  1533  07A0  1C2B               	btfss	_lcd+1,0
  1534  07A1  1383               	bcf	3,7
  1535  07A2  0871               	movf	??_LCD_Out+1,w
  1536  07A3  0580               	andwf	0,f
  1537  07A4                     l858:	
  1538                           
  1539                           ;lcd.c: 41:     if ( c & 8 ) {
  1540  07A4  1DF3               	btfss	LCD_Out@c,3
  1541  07A5  2FA7               	goto	u381
  1542  07A6  2FA8               	goto	u380
  1543  07A7                     u381:	
  1544  07A7  2FC0               	goto	l862
  1545  07A8                     u380:	
  1546  07A8                     l860:	
  1547                           
  1548                           ;lcd.c: 42:          *(lcd.PORT) |= 1 << lcd.D7;
  1549  07A8  3001               	movlw	1
  1550  07A9  00F0               	movwf	??_LCD_Out
  1551  07AA  0C2E               	rrf	_lcd+4,w
  1552  07AB  00F1               	movwf	??_LCD_Out+1
  1553  07AC  0CF1               	rrf	??_LCD_Out+1,f
  1554  07AD  0C71               	rrf	??_LCD_Out+1,w
  1555  07AE  3907               	andlw	7
  1556  07AF  3E01               	addlw	1
  1557  07B0  2FB3               	goto	u394
  1558  07B1                     u395:	
  1559  07B1  1003               	clrc
  1560  07B2  0DF0               	rlf	??_LCD_Out,f
  1561  07B3                     u394:	
  1562  07B3  3EFF               	addlw	-1
  1563  07B4  1D03               	skipz
  1564  07B5  2FB1               	goto	u395
  1565  07B6  0870               	movf	??_LCD_Out,w
  1566  07B7  00F2               	movwf	??_LCD_Out+2
  1567  07B8  082A               	movf	_lcd,w
  1568  07B9  0084               	movwf	4
  1569  07BA  1783               	bsf	3,7
  1570  07BB  1C2B               	btfss	_lcd+1,0
  1571  07BC  1383               	bcf	3,7
  1572  07BD  0872               	movf	??_LCD_Out+2,w
  1573  07BE  0480               	iorwf	0,f
  1574                           
  1575                           ;lcd.c: 43:     }
  1576  07BF  2FD8               	goto	l27
  1577  07C0                     l862:	
  1578                           
  1579                           ;lcd.c: 45:          *(lcd.PORT) &= ~(1 << lcd.D7);
  1580  07C0  3001               	movlw	1
  1581  07C1  00F0               	movwf	??_LCD_Out
  1582  07C2  0C2E               	rrf	_lcd+4,w
  1583  07C3  00F1               	movwf	??_LCD_Out+1
  1584  07C4  0CF1               	rrf	??_LCD_Out+1,f
  1585  07C5  0C71               	rrf	??_LCD_Out+1,w
  1586  07C6  3907               	andlw	7
  1587  07C7  3E01               	addlw	1
  1588  07C8  2FCB               	goto	u404
  1589  07C9                     u405:	
  1590  07C9  1003               	clrc
  1591  07CA  0DF0               	rlf	??_LCD_Out,f
  1592  07CB                     u404:	
  1593  07CB  3EFF               	addlw	-1
  1594  07CC  1D03               	skipz
  1595  07CD  2FC9               	goto	u405
  1596  07CE  0870               	movf	??_LCD_Out,w
  1597  07CF  3AFF               	xorlw	255
  1598  07D0  00F2               	movwf	??_LCD_Out+2
  1599  07D1  082A               	movf	_lcd,w
  1600  07D2  0084               	movwf	4
  1601  07D3  1783               	bsf	3,7
  1602  07D4  1C2B               	btfss	_lcd+1,0
  1603  07D5  1383               	bcf	3,7
  1604  07D6  0872               	movf	??_LCD_Out+2,w
  1605  07D7  0580               	andwf	0,f
  1606  07D8                     l27:	
  1607  07D8  0008               	return
  1608  07D9                     __end_of_LCD_Out:	
  1609  007E                     btemp	set	126	;btemp
  1610  007E                     wtemp0	set	126


Data Sizes:
    Strings     6
    Constant    0
    Data        5
    BSS         5
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     10      20
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    lcd.PORT	PTR volatile unsigned char  size(2) Largest target is 1
		 -> PORTC(SFR0[1]), 

    F1468.PORT	PTR volatile unsigned char  size(2) Largest target is 1
		 -> PORTC(SFR0[1]), 

    LCD_putrs@a	PTR const unsigned char  size(1) Largest target is 6
		 -> STR_1(CODE[6]), 

    display.PORT	PTR volatile unsigned char  size(2) Largest target is 1
		 -> PORTC(SFR0[1]), 

    S22$PORT	PTR volatile unsigned char  size(2) Largest target is 1
		 -> PORTC(SFR0[1]), 

    lcd.PORT	PTR volatile unsigned char  size(2) Largest target is 1
		 -> PORTC(SFR0[1]), 


Critical Paths under _main in COMMON

    _main->_LCD_Init
    _LCD_putrs->_LCD_putc
    _LCD_putc->_LCD_Out
    _LCD_Init->_LCD_Write
    _LCD_Write->_LCD_Out

Critical Paths under _main in BANK0

    _main->_LCD_Init

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 8     8      0     690
                                              2 BANK0      8     8      0
                           _LCD_Init
                          _LCD_Write
                          _LCD_putrs
 ---------------------------------------------------------------------------------
 (1) _LCD_putrs                                            3     3      0     255
                                              8 COMMON     3     3      0
                           _LCD_putc
 ---------------------------------------------------------------------------------
 (2) _LCD_putc                                             4     4      0     132
                                              4 COMMON     4     4      0
                            _LCD_Out
 ---------------------------------------------------------------------------------
 (1) _LCD_Init                                             8     3      5     256
                                              8 COMMON     6     1      5
                                              0 BANK0      2     2      0
                          _LCD_Write
 ---------------------------------------------------------------------------------
 (1) _LCD_Write                                            4     4      0     110
                                              4 COMMON     4     4      0
                            _LCD_Out
 ---------------------------------------------------------------------------------
 (3) _LCD_Out                                              4     4      0      88
                                              0 COMMON     4     4      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _LCD_Init
     _LCD_Write
       _LCD_Out
   _LCD_Write
     _LCD_Out
   _LCD_putrs
     _LCD_putc
       _LCD_Out

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0       0       7        0.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50      A      14       5       25.0%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      E       E       1      100.0%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      22      12        0.0%
ABS                  0      0      22       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Sat Jun 05 17:01:58 2021

                      pc 0002              __CFG_CP$OFF 0000                       l30 0558  
                     l27 07D8                       l51 0702                       l39 070E  
                     l55 0657                       l67 04FD                       fsr 0004  
                    l103 0599                      l900 0687                      l910 06B6  
                    l902 0691                      l840 0710                      l920 06D9  
                    l912 06C1                      l904 0694                      l850 075E  
                    l842 0714                      l922 06DF                      l914 06C7  
                    l906 069F                      l860 07A8                      l852 0776  
                    l844 072B                      l932 06EC                      l924 06E5  
                    l916 06CD                      l908 06A5                      l940 04EA  
                    l862 07C0                      l854 077A                      l846 0742  
                    l870 0535                      l926 06EB                      l918 06D3  
                    l942 04F0                      l856 078F                      l848 0746  
                    l872 053E                      l864 04FF                      l880 05FB  
                    l936 04DA                      l952 0559                      l858 07A4  
                    l866 0516                      l890 0658                      l882 05FF  
                    l874 05BD                      l938 04DD                      l962 058D  
                    l954 056C                      l868 051C                      l892 0669  
                    l884 0619                      l876 05D3                      l956 0581  
                    l894 0675                      l886 0620                      l878 05E2  
                    l974 05A2                      l958 0587                      l896 0679  
                    l888 063D                      l976 05AC                      l968 059F  
                    l898 0683                      l978 05B2                      u320 0746  
                    u304 071E                      u321 0745                      u305 071C  
                    u314 0735                      u315 0733                      u404 07CB  
                    u500 0675                      u405 07C9                      u501 0674  
                    u350 077A                      u334 0751                      u414 0509  
                    u510 0683                      u351 0779                      u335 074F  
                    u415 0507                      u511 0682                      u344 0769  
                    u424 0529                      u520 0691                      u345 0767  
                    u425 0527                      u521 0690                      u505 0671  
                    u290 0714                      u434 054B             __CFG_CPD$OFF 0000  
                    u291 0713                      u435 0549                      u515 067F  
                    u380 07A8                      u364 0782                      u444 05C7  
                    u540 04FD                      u381 07A7                      u365 0780  
                    u525 068D                      u445 05C5                      u541 04FC  
                    u374 0797                      u375 0795                      u535 06EF  
                    u607 069A                      u455 05D6                      u464 05EF  
                    u560 05B8                      u617 06AB                      u465 05ED  
                    u561 05B7                      u394 07B3                      u474 060C  
                    u395 07B1                      u627 06BC                      u475 060A  
                    u484 062D                      u637 0539                      u485 062B  
                    u494 064A                      u495 0648                      u577 05A8  
                    u587 05FD                      u597 063B          LCD_Init@display 0078  
                    _lcd 002A                      fsr0 0004                      indf 0000  
           __CFG_IESO$ON 0000             __CFG_FOSC$XT 0000             __CFG_LVP$OFF 0000  
        __end_of_LCD_Out 07D9                     STR_1 0009             __CFG_WRT$OFF 0000  
          __CFG_FCMEN$ON 0000                     _main 0559                     btemp 007E  
          __CFG_BOREN$ON 0000                     start 0000       __size_of_LCD_Write 005B  
            LCD_Init@cmd 007D            __CFG_MCLRE$ON 0000       __size_of_LCD_putrs 0025  
       __end_of_LCD_Init 070F         __end_of_LCD_putc 0658                    ?_main 0070  
          __CFG_WDTE$OFF 0000                    _PORTA 0005                    _PORTB 0006  
                  _PORTC 0007                    _TRISA 0085                    _TRISB 0086  
                  _TRISC 0087                    main@i 0029                    pclath 000A  
                  status 0003                    wtemp0 007E          __initialization 07D9  
           __end_of_main 05BC                   ??_main 0022                ??_LCD_Out 0070  
      __end_of_LCD_Write 0559        __end_of_LCD_putrs 04FE           __CFG_PWRTE$OFF 0000  
__end_of__initialization 07FC                ?_LCD_Init 0078                ?_LCD_putc 0070  
         __pcstackCOMMON 0070             __pidataBANK0 04D4                LCD_putc@c 0077  
             __pbssBANK0 002A               ??_LCD_Init 0020               ??_LCD_putc 0074  
             __pmaintext 0559                  _LCD_Out 070F               __stringtab 0003  
                __ptext1 04D9                  __ptext2 05BC                  __ptext3 0658  
                __ptext4 04FE                  __ptext5 070F                  main@lcd 0024  
              _LCD_Write 04FE     end_of_initialization 07FC                _LCD_putrs 04D9  
             ?_LCD_Write 0070               ?_LCD_putrs 0070        __size_of_LCD_Init 00B7  
      __size_of_LCD_putc 009C               LCD_Write@c 0077      start_initialization 07D9  
             LCD_putrs@a 007A               LCD_putrs@i 0078              __pdataBANK0 002F  
               ?_LCD_Out 0070                ___latbits 0002            __pcstackBANK0 0020  
               LCD_Out@c 0073              ??_LCD_Write 0074              ??_LCD_putrs 0078  
              __pstrings 0003                 _LCD_Init 0658                 _LCD_putc 05BC  
              main@F1468 002F              __stringbase 0008         __size_of_LCD_Out 00CA  
     __end_of__stringtab 0009        __CFG_BOR4V$BOR21V 0000            __size_of_main 0063  
              stringcode 0003                 stringdir 0003                 stringtab 0003  
